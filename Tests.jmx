<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test get all" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/operations</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test get" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">3956</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/lastfm/getOperation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: null,&#xd;
    &quot;started&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
    &quot;completed&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
    &quot;searchSuboperation&quot;: {&#xd;
        &quot;id&quot;: null,&#xd;
        &quot;started&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
        &quot;completed&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
        &quot;searchedTracks&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;triedToSearchTracks&quot;: true,&#xd;
                &quot;trackToSearch&quot;: {&#xd;
                    &quot;id&quot;: null,&#xd;
                    &quot;title&quot;: &quot;FM title 11&quot;,&#xd;
                    &quot;spotifyID&quot;: &quot;FM spotifyID 11&quot;,&#xd;
                    &quot;lastFmID&quot;: &quot;FM lastFmID 11&quot;,&#xd;
                    &quot;vkID&quot;: &quot;FM vkID 11&quot;,&#xd;
                    &quot;vkOwnerID&quot;: &quot;FM vkOwnerID 11&quot;,&#xd;
                    &quot;artists&quot;: [&#xd;
                        &quot;FM foo&quot;,&#xd;
                        &quot;FM bar&quot;&#xd;
                    ],&#xd;
                    &quot;duration&quot;: 60&#xd;
                },&#xd;
                &quot;foundTracks&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;serverID&quot;: &quot;FM 1&quot;,&#xd;
                        &quot;mbid&quot;: &quot;FM 1&quot;,&#xd;
                        &quot;name&quot;: &quot;FM name 1&quot;,&#xd;
                        &quot;artist&quot;: &quot;FM artist 1&quot;,&#xd;
                        &quot;url&quot;: &quot;FM url 1&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;triedToSearchTracks&quot;: true,&#xd;
                &quot;trackToSearch&quot;: {&#xd;
                    &quot;id&quot;: null,&#xd;
                    &quot;title&quot;: &quot;FM title 12&quot;,&#xd;
                    &quot;spotifyID&quot;: &quot;FM spotifyID 12&quot;,&#xd;
                    &quot;lastFmID&quot;: &quot;FM lastFmID 12&quot;,&#xd;
                    &quot;vkID&quot;: &quot;FM vkID 12&quot;,&#xd;
                    &quot;vkOwnerID&quot;: &quot;FM vkOwnerID 12&quot;,&#xd;
                    &quot;artists&quot;: [&#xd;
                        &quot;FM foo&quot;,&#xd;
                        &quot;FM bar&quot;&#xd;
                    ],&#xd;
                    &quot;duration&quot;: 60&#xd;
                },&#xd;
                &quot;foundTracks&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;serverID&quot;: &quot;FM 2&quot;,&#xd;
                        &quot;mbid&quot;: &quot;FM 2&quot;,&#xd;
                        &quot;name&quot;: &quot;FM name 2&quot;,&#xd;
                        &quot;artist&quot;: &quot;FM artist 2&quot;,&#xd;
                        &quot;url&quot;: &quot;FM url 2&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;likeSuboperation&quot;: {&#xd;
        &quot;id&quot;: null,&#xd;
        &quot;started&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
        &quot;completed&quot;: &quot;2022-04-15 10:28:37&quot;,&#xd;
        &quot;tracksToLike&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;liked&quot;: true,&#xd;
                &quot;track&quot;: {&#xd;
                    &quot;id&quot;: null,&#xd;
                    &quot;serverID&quot;: &quot;FM 3&quot;,&#xd;
                    &quot;mbid&quot;: &quot;FM 3&quot;,&#xd;
                    &quot;name&quot;: &quot;FM name 3&quot;,&#xd;
                    &quot;artist&quot;: &quot;FM artist 3&quot;,&#xd;
                    &quot;url&quot;: &quot;FM url 3&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;notFoundTracks&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;title&quot;: &quot;FM title 1&quot;,&#xd;
                &quot;spotifyID&quot;: &quot;FM spotifyID 1&quot;,&#xd;
                &quot;lastFmID&quot;: &quot;FM lastFmID 1&quot;,&#xd;
                &quot;vkID&quot;: &quot;FM vkID 1&quot;,&#xd;
                &quot;vkOwnerID&quot;: &quot;FM vkOwnerID 1&quot;,&#xd;
                &quot;artists&quot;: [&#xd;
                    &quot;FM foo&quot;,&#xd;
                    &quot;FM bar&quot;&#xd;
                ],&#xd;
                &quot;duration&quot;: 60&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;user&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/lastfm/saveOperation</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwYW5hbmRhZm9nIiwiYXV0aCI6W10sImlhdCI6MTY1MDExODg2NywiZXhwIjoxNjUwMjA1MjY3fQ.JDTBS7Um4dCZFwMwOdni0bRslRcW0zMiNx4yJMoJkzw</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
